{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente","Erro"],"mappings":";;;;;;;;;;;;;;;AAAQA,uB,gBAAAA,W;;AACAC,6B,sBAAAA,iB;;AACAC,yB,qBAAAA,a;;AACAC,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;yCAEKC,iB;AAET,6CAAa;AAAA;;AACT,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;;;uDAEiB;AACd,+BAAOM,QAAQC,GAAR,CAAY,CACf,KAAKC,wBAAL,EADe,EAEf,KAAKC,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAIJC,IAJI,CAIC,oBAAY;;AAEhB,gCAAIC,cAAcC,SACbC,MADa,CACN,UAACC,KAAD,EAAQC,OAAR;AAAA,uCAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,6BADM,EACqC,EADrC,CAAlB;;AAGA,mCAAOJ,WAAP;AAEH,yBAXM,EAWJM,KAXI,CAWE,gBAAQ;AACb,kCAAM,IAAIC,KAAJ,CAAUC,IAAV,CAAN;AACH,yBAbM,CAAP;AAcH;;;+DAGyB;;AAEtB,+BAAO,KAAKf,KAAL,CACFgB,GADE,CACE,oBADF,EAEFV,IAFE,CAEG,uBAAe;AACjB,mCAAOC,YAAYU,GAAZ,CAAgB;AAAA,uCAAU,IAAInB,UAAJ,CAAe,IAAIoB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAP;AACH,yBAJE,EAKFT,KALE,CAKI,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,iDAAV,CAAN;AACH,yBARE,CAAP;AASH;;;uEAEiC;;AAE9B,+BAAO,KAAKd,KAAL,CACFgB,GADE,CACE,sBADF,EAEFV,IAFE,CAEG,uBAAe;AACjB,mCAAOC,YAAYU,GAAZ,CAAgB;AAAA,uCAAU,IAAInB,UAAJ,CAAe,IAAIoB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAP;AACH,yBAJE,EAKFT,KALE,CAKI,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,0DAAV,CAAN;AACH,yBARE,CAAP;AAUH;;;wEAEkC;;AAG/B,+BAAQ,KAAKd,KAAL,CACHgB,GADG,CACC,uBADD,EAEHV,IAFG,CAEE,uBAAe;AACjB,mCAAOC,YAAYU,GAAZ,CAAgB;AAAA,uCAAU,IAAInB,UAAJ,CAAe,IAAIoB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAP;AACH,yBAJG,EAKHT,KALG,CAKG,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,2DAAV,CAAN;AACH,yBARG,CAAR;AASH;;;6CAGQW,U,EAAW;AAChB,+BAAO7B,kBACF8B,aADE,GAEFpB,IAFE,CAEG;AAAA,mCAAc,IAAIT,aAAJ,CAAkB8B,UAAlB,CAAd;AAAA,yBAFH,EAGFrB,IAHE,CAGG;AAAA,mCAAOsB,IAAIC,QAAJ,CAAaJ,UAAb,CAAP;AAAA,yBAHH,EAIFnB,IAJE,CAIG;AAAA,mCAAM,mCAAN;AAAA,yBAJH,EAKFO,KALE,CAKI,YAAM;AACT,kCAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACH,yBAPE,CAAP;AAWH;;;4CAEM;AACJ,+BAAOlB,kBACD8B,aADC,GAEDpB,IAFC,CAEI;AAAA,mCAAc,IAAIT,aAAJ,CAAkB8B,UAAlB,CAAd;AAAA,yBAFJ,EAGDrB,IAHC,CAGI;AAAA,mCAAOsB,IAAIE,UAAJ,EAAP;AAAA,yBAHJ,EAIDjB,KAJC,CAIK,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,uCAAV,CAAN;AACP,yBAPK,CAAP;AAQF;;;4CAGM;AACH,+BAAOlB,kBACF8B,aADE,GAEFpB,IAFE,CAEG;AAAA,mCAAc,IAAIT,aAAJ,CAAkB8B,UAAlB,CAAd;AAAA,yBAFH,EAGFrB,IAHE,CAGG;AAAA,mCAAOsB,IAAIG,UAAJ,EAAP;AAAA,yBAHH,EAIFzB,IAJE,CAIG;AAAA,mCAAM,kCAAN;AAAA,yBAJH,EAKFO,KALE,CAKI,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,uCAAV,CAAN;AACP,yBARM,CAAP;AASH;;;4CAEOkB,U,EAAW;;AAEf,+BAAO,KAAKC,gBAAL,GACN3B,IADM,CACD;AAAA,mCACFC,YAAY2B,MAAZ,CAAmB;AAAA,uCACf,CAACF,WAAWG,IAAX,CAAgB;AAAA,2CACbV,WAAWW,QAAX,CAAoBC,mBAApB,CADa;AAAA,iCAAhB,CADc;AAAA,6BAAnB,CADE;AAAA,yBADC,EAMNxB,KANM,CAMA,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAIuB,IAAJ,CAAS,mDAAT,CAAN;AACH,yBATM,CAAP;AAWH","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from \"./HttpService\";\nimport {ConnectionFactory} from \"./ConnectionFactory\";\nimport {NegociacaoDao} from \"../dao/NegociacaoDao\";\nimport {Negociacao} from \"../models/Negociacao\";\n\nexport class NegociacaoService{\n\n    constructor(){\n        this._http = new HttpService();\n    }\n\n    obterNegociacoes(){\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), []);\n\n            return negociacoes;\n\n        }).catch(erro => {\n            throw new Error(erro);\n        });        \n    }\n\n\n    obterNegociacoesDaSemana(){\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana')\n            });\n    }\n\n    obterNegociacoesDaSemanaAnterior(){\n\n        return this._http\n            .get('negociacoes/anterior')\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana anterior')\n            });  \n        \n    }\n\n    obterNegociacoesDaSemanaRetrasada(){\n\n\n        return  this._http\n            .get('negociacoes/retrasada')\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana retrasada')\n            });\n    }\n\n\n    cadastra(negociacao){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso')\n            .catch(() => {\n                throw new Error('Não foi possível adicionar a negociação')\n            });\n        \n   \n\n    }\n\n    lista(){\n       return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())        \n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações');\n        });\n    }\n\n\n    apaga(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações');\n        });\n    }\n\n    importa(listaAtual){\n        \n        return this.obterNegociacoes()\n        .then(negociacoes => \n            negociacoes.filter(negociacao =>\n                !listaAtual.some(negociacaoExistente =>\n                    negociacao.isEquals(negociacaoExistente)))\n        )\n        .catch(erro => {\n            console.log(erro);\n            throw new Erro('Não foi possível buscar negociações para importar');\n        })\n\n    }\n\n}"]}